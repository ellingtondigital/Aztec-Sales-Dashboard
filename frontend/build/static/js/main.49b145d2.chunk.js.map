{"version":3,"sources":["config.js","Login.js","context/UploadedDataContext.js","Screen/FileUpload.js","Screen/Logoimage.png","Screen/Navbar.js","charts/SimpleBarChart.js","Screen/Menubar.js","Screen/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["API_BASE_URL","Login","_ref","onLogin","username","setUsername","useState","password","setPassword","error","setError","_jsx","Container","className","style","height","children","_jsxs","maxWidth","width","Alert","variant","Form","onSubmit","async","e","preventDefault","fetch","method","headers","body","JSON","stringify","ok","err","console","Group","controlId","Label","Control","type","placeholder","value","onChange","target","Button","UploadedDataContext","createContext","UploadedDataProvider","uploadedData","setUploadedData","Provider","useUploadedData","useContext","FileUpload","file","setFile","selectedSheet","setSelectedSheet","useEffect","axios","get","then","response","log","data","fileName","sheetName","rows","sheetData","reduce","acc","sheet_name","catch","files","onClick","onFileUpload","formData","FormData","append","post","Object","keys","length","map","index","borderCollapse","_","idx","border","padding","row","rowIndex","cell","cellIndex","buttonStyle","backgroundColor","color","borderRadius","cursor","display","alignItems","textDecoration","fontWeight","marginLeft","NavigationBar","useNavigate","Navbar","bg","expand","Brand","as","Link","to","src","logo","alt","Toggle","Collapse","id","Nav","justifyContent","handleUpdateFileClick","window","location","reload","FaUser","marginRight","SimpleBarChart","selectedColumnIndex","setSelectedColumnIndex","dataRange","sheet","extractedData","i","push","name","extractData","default","boxShadow","selected","ResponsiveContainer","BarChart","layout","margin","top","right","bottom","left","CartesianGrid","strokeDasharray","XAxis","domain","stroke","tick","fontSize","YAxis","dataKey","tickLine","axisLine","Tooltip","Bar","fill","barSize","Menubar","textAlign","event","marginTop","disabled","Dashboard","Row","marginBottom","Col","md","Card","Body","App","isAuthenticated","setIsAuthenticated","authStatus","localStorage","getItem","Router","Routes","Route","path","element","Navigate","handleLogin","setItem","onFileUploadSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.49b145d2.chunk.js","sourcesContent":["const environment = \"development\"; // Change to 'development' for local\r\nconst config = {\r\n  development: {\r\n    API_BASE_URL: \"/api\",\r\n  },\r\n  production: {\r\n    API_BASE_URL: \"/api\",\r\n  },\r\n};\r\n\r\nexport const { API_BASE_URL } = config[environment];\r\n","// // frontend/src/Login.js\r\n// import React, { useState } from 'react';\r\n// import { Container, Form, Button, Alert } from 'react-bootstrap';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// const hardcodedUser = {\r\n//   username: 'test@gmail.com',\r\n//   password: '123456'\r\n// };\r\n\r\n// function Login({ onLogin }) {\r\n//   const [username, setUsername] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [error, setError] = useState('');\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     if (username === hardcodedUser.username && password === hardcodedUser.password) {\r\n//       onLogin();\r\n//     } else {\r\n//       setError('Invalid credentials');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <Container className=\"d-flex justify-content-center align-items-center\" style={{ height: '100vh' }}>\r\n//       <div className=\"border p-4 rounded\" style={{ maxWidth: '400px', width: '100%' }}>\r\n//         <h3 className=\"mb-3\">Login</h3>\r\n//         {error && <Alert variant=\"danger\">{error}</Alert>}\r\n//         <Form onSubmit={handleSubmit}>\r\n//           <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n//             <Form.Label>Email address</Form.Label>\r\n//             <Form.Control\r\n//               type=\"email\"\r\n//               placeholder=\"Enter email\"\r\n//               value={username}\r\n//               onChange={(e) => setUsername(e.target.value)}\r\n//             />\r\n//           </Form.Group>\r\n\r\n//           <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n//             <Form.Label>Password</Form.Label>\r\n//             <Form.Control\r\n//               type=\"password\"\r\n//               placeholder=\"Password\"\r\n//               value={password}\r\n//               onChange={(e) => setPassword(e.target.value)}\r\n//             />\r\n//           </Form.Group>\r\n\r\n//           <Button variant=\"primary\" type=\"submit\">\r\n//             Login\r\n//           </Button>\r\n//         </Form>\r\n//       </div>\r\n//     </Container>\r\n//   );\r\n// }\r\n\r\n// export default Login;\r\n\r\nimport React, { useState } from \"react\";\r\nimport { Container, Form, Button, Alert } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { API_BASE_URL } from \"./config\";\r\n\r\nconst Login = ({ onLogin }) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/login`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ username, password }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        onLogin();\r\n      } else {\r\n        setError(\"Invalid credentials\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error:\", err);\r\n      setError(\"An error occurred\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      className=\"d-flex justify-content-center align-items-center\"\r\n      style={{ height: \"100vh\" }}\r\n    >\r\n      <div\r\n        className=\"border p-4 rounded\"\r\n        style={{ maxWidth: \"400px\", width: \"100%\" }}\r\n      >\r\n        <h3 className=\"mb-3\">Login</h3>\r\n        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Login\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { createContext, useState, useContext } from 'react';\r\n\r\n// Create the context\r\nconst UploadedDataContext = createContext();\r\n\r\n// Create a provider component\r\nexport const UploadedDataProvider = ({ children }) => {\r\n    const [uploadedData, setUploadedData] = useState({});\r\n\r\n    return (\r\n        <UploadedDataContext.Provider value={{ uploadedData, setUploadedData }}>\r\n            {children}\r\n        </UploadedDataContext.Provider>\r\n    );\r\n};\r\n\r\n// Custom hook to use the context\r\nexport const useUploadedData = () => useContext(UploadedDataContext);\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { API_BASE_URL } from '../config';\r\nimport { useUploadedData } from '../context/UploadedDataContext';\r\n\r\nfunction FileUpload() {\r\n    const [file, setFile] = useState(null);\r\n    const [selectedSheet, setSelectedSheet] = useState('');\r\n    const { uploadedData, setUploadedData } = useUploadedData();\r\n\r\n    useEffect(() => {\r\n        // Fetch the most recent file name\r\n        axios.get(`${API_BASE_URL}/last-uploaded`)\r\n            .then(response => {\r\n                console.log('Most recent file data:', response.data); // Log the fetched data\r\n\r\n                const { fileName, sheetName, rows } = response.data;\r\n\r\n                if (fileName && sheetName) {\r\n                    // Fetch all records for the file\r\n                    axios.get(`${API_BASE_URL}/files/${fileName}`)\r\n                        .then(response => {\r\n                            console.log('Data for the most recent file:', response.data); // Log data for the most recent file\r\n\r\n                            const sheetData = response.data.reduce((acc, { sheet_name, rows }) => {\r\n                                acc[sheet_name] = rows;\r\n                                return acc;\r\n                            }, {});\r\n                            setUploadedData(sheetData);\r\n                            setSelectedSheet(sheetName);\r\n                        })\r\n                        .catch(error => {\r\n                            console.error('Error fetching data for the most recent file:', error);\r\n                        });\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching the most recent file:', error);\r\n            });\r\n    }, [setUploadedData]);\r\n\r\n    const onFileChange = (e) => {\r\n        setFile(e.target.files[0]);\r\n    };\r\n\r\n    const onFileUpload = () => {\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n\r\n        axios.post(`${API_BASE_URL}/upload`, formData)\r\n            .then(response => {\r\n                console.log('Upload response:', response.data); // Log the upload response\r\n                setUploadedData(response.data);\r\n                setSelectedSheet(Object.keys(response.data)[0]);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error uploading file:', error);\r\n            });\r\n    };\r\n\r\n    const handleSheetChange = (e) => {\r\n        setSelectedSheet(e.target.value);\r\n    };\r\n\r\n    const renderTable = (data) => {\r\n        if (!data.length) return null;\r\n\r\n        return (\r\n            <table style={{ borderCollapse: 'collapse', width: '100%' }}>\r\n                <thead>\r\n                    <tr>\r\n                        {data[0].map((_, idx) => (\r\n                            <th key={idx} style={{ border: '1px solid black', padding: '8px' }}>Column {idx + 1}</th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {data.map((row, rowIndex) => (\r\n                        <tr key={rowIndex}>\r\n                            {row.map((cell, cellIndex) => (\r\n                                <td key={cellIndex} style={{ border: '1px solid black', padding: '8px' }}>{cell}</td>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Upload .xlsx File</h1>\r\n            <input type=\"file\" onChange={onFileChange} />\r\n            <button onClick={onFileUpload}>Upload</button>\r\n            {Object.keys(uploadedData).length > 0 && (\r\n                <div>\r\n                    <h2>Select a sheet:</h2>\r\n                    <select onChange={handleSheetChange} value={selectedSheet}>\r\n                        {Object.keys(uploadedData).map((sheetName, index) => (\r\n                            <option key={index} value={sheetName}>{sheetName}</option>\r\n                        ))}\r\n                    </select>\r\n                    <div>\r\n                        <h2>Data from {selectedSheet}:</h2>\r\n                        {renderTable(uploadedData[selectedSheet])}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FileUpload;\r\n","export default __webpack_public_path__ + \"static/media/Logoimage.3636d39a.png\";","// import React from 'react';\r\n// import { Navbar, Nav } from 'react-bootstrap';\r\n// import { Link, useNavigate } from 'react-router-dom';\r\n// import logo from './Logoimage.png';\r\n\r\n// function NavigationBar() {\r\n//   // You can use `useNavigate` to programmatically navigate if needed\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleUpdateFileClick = () => {\r\n//     // Force a page reload\r\n//     window.location.reload();\r\n//   };\r\n\r\n//   return (\r\n//     <Navbar bg=\"light\" expand=\"lg\">\r\n//       <Navbar.Brand as={Link} to=\"/\">\r\n//         <img\r\n//           src={logo}\r\n//           alt=\"Logo\"\r\n//           height=\"50\" // Adjust the height as needed\r\n//           className=\"d-inline-block align-top\"\r\n//         />\r\n//       </Navbar.Brand>\r\n\r\n//       <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n//       <Navbar.Collapse id=\"basic-navbar-nav\">\r\n//         <Nav className=\"mr-auto\">\r\n//           <Nav.Link as={Link} to=\"/dashboard\">Dashboard</Nav.Link>\r\n//         </Nav>\r\n//         <Nav className=\"mr-auto\">\r\n//         <Nav.Link as={Link} to=\"/\" onClick={handleUpdateFileClick} style={buttonStyle}>Update File</Nav.Link>\r\n//         </Nav>\r\n//       </Navbar.Collapse>\r\n//     </Navbar>\r\n//   );\r\n\r\n  \r\n// }\r\n// const buttonStyle = {\r\n//   backgroundColor: 'indigo',\r\n//   color: 'white',\r\n//   padding: '10px 20px',\r\n//   border: 'none',\r\n//   borderRadius: '5px',\r\n//   cursor: 'pointer',\r\n//   display: 'inline-flex',\r\n//   alignItems: 'center',\r\n//   textDecoration: 'none',\r\n//   fontWeight: 'bold',\r\n// };\r\n// export default NavigationBar;\r\n\r\n\r\nimport React from 'react';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { FaUser } from 'react-icons/fa'; // Import user icon from react-icons\r\nimport logo from './Logoimage.png';\r\n\r\nfunction NavigationBar() {\r\n  const navigate = useNavigate();\r\n\r\n  const handleUpdateFileClick = () => {\r\n    // Force a page reload\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <Navbar bg=\"light\" expand=\"lg\" >\r\n      <Navbar.Brand as={Link} to=\"/\">\r\n        <img\r\n          src={logo}\r\n          alt=\"Logo\"\r\n          height=\"50\" // Adjust the height as needed\r\n          className=\"d-inline-block align-top\"\r\n        />\r\n      </Navbar.Brand>\r\n\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav \" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link as={Link} to=\"/dashboard\">Dashboard</Nav.Link>\r\n        </Nav>\r\n        </Navbar.Collapse>\r\n\r\n        <Navbar.Collapse style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n        <Nav className=\"ml-auto\" > {/* Align to the right */}\r\n          <Nav.Link as={Link} to=\"/\" onClick={handleUpdateFileClick} style={buttonStyle}>\r\n            Update File\r\n          </Nav.Link>\r\n          <Nav.Link as={Link} to=\"/profile\" style={buttonStyle}>\r\n            <FaUser style={{ marginRight: '5px' }} /> Profile\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\n\r\nconst buttonStyle = {\r\n  backgroundColor: 'indigo',\r\n  color: 'white',\r\n  padding: '10px 20px',\r\n  border: 'none',\r\n  borderRadius: '5px',\r\n  cursor: 'pointer',\r\n  display: 'inline-flex',\r\n  alignItems: 'center',\r\n  textDecoration: 'none',\r\n  fontWeight: 'bold',\r\n  marginLeft: '10px', // Add spacing between buttons\r\n};\r\n\r\nexport default NavigationBar;\r\n","// import React, { useState } from 'react';\r\n// import { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\r\n// import { useUploadedData } from '../context/UploadedDataContext';\r\n\r\n// const SimpleBarChart = () => {\r\n//   const { uploadedData } = useUploadedData();\r\n\r\n//   // State to track the selected column index\r\n//   const [selectedColumnIndex, setSelectedColumnIndex] = useState(209); // Default to 209 (\"LEADS\")\r\n\r\n//   // Extract data from \"Lead Source\" sheet\r\n//   const sheetName = 'Lead Source'; // Sheet name\r\n//   const dataRange = { start: 4, end: 63 }; // Range from A4 to A63\r\n\r\n//   // Convert the sheet data into the required format for the BarChart\r\n//   const extractData = (data) => {\r\n//     if (!data[sheetName]) return [];\r\n\r\n//     const sheet = data[sheetName];\r\n//     const extractedData = [];\r\n//     for (let i = dataRange.start - 1; i < dataRange.end - 1 && i < sheet.length; i++) {\r\n//       extractedData.push({\r\n//         name: sheet[i][0], // Item names from column A\r\n//         value: sheet[i][selectedColumnIndex] || 0 // Values from the selected column\r\n//       });\r\n//     }\r\n//     return extractedData;\r\n//   };\r\n\r\n//   const data = extractData(uploadedData);\r\n\r\n//   return (\r\n//     <div className=\"rounded-md bg-card text-card-foreground shadow-sm\">\r\n//       <div className=\"flex flex-col space-y-1.5 px-4 py-4 mb-6 border-b border-border\">\r\n//         <h3 className=\"text-xl font-medium leading-none\">Lead Source</h3>\r\n        \r\n//         {/* Buttons for selecting the column */}\r\n//         <div className=\"flex space-x-2\">\r\n//           <button onClick={() => setSelectedColumnIndex(209)}style={{ backgroundColor: '#01A5E4', marginRight: '10px' }} className=\"px-4 py-2 bg-blue-500 text-white rounded\">LEADS</button>\r\n//           <button onClick={() => setSelectedColumnIndex(210)}style={{ backgroundColor: '#8DD7C0', marginRight: '10px' }} className=\"px-4 py-2 bg-green-500 text-white rounded\">APPTS</button>\r\n//           <button onClick={() => setSelectedColumnIndex(211)}style={{ backgroundColor: '#FF96C6', marginRight: '10px' }} className=\"px-4 py-2 bg-yellow-500 text-white rounded\">SALES</button>\r\n//           <button onClick={() => setSelectedColumnIndex(212)}style={{ backgroundColor: '#FF5768', marginRight: '10px' }} className=\"px-4 py-2 bg-red-500 text-white rounded\">Amount $</button>\r\n//         </div>\r\n//       </div>\r\n//       <div className=\"p-6 pt-0\">\r\n//         <ResponsiveContainer width=\"100%\" height={2500}> {/* Adjust height as needed */}\r\n//           <BarChart data={data} layout=\"vertical\" margin={{ top: 20, right: 30, bottom: 20, left: 100 }}>\r\n//             <CartesianGrid strokeDasharray=\"3 3\" />\r\n//             <XAxis\r\n//               type=\"number\"\r\n//               domain={[0, 350]} // Set domain to limit the range\r\n//               stroke=\"hsl(215.3 19.3% 34.5%)\"\r\n//               tick={{ fontSize: 12 }} // Adjust font size for better readability\r\n//             />\r\n//             <YAxis\r\n//               type=\"category\"\r\n//               dataKey=\"name\"\r\n//               stroke=\"hsl(215.3 19.3% 34.5%)\"\r\n//               tick={{ fontSize: 12 }} // Adjust font size for better readability\r\n//               width={150} // Set width for Y-axis to accommodate long names\r\n//               tickLine={false} // Hide tick lines for better appearance\r\n//               axisLine={{ stroke: 'hsl(215.3 19.3% 34.5%)' }} // Customize axis line color\r\n//             />\r\n//             <Tooltip />\r\n//             <Bar dataKey=\"value\" fill=\"hsl(25 95% 53%)\" />\r\n//           </BarChart>\r\n//         </ResponsiveContainer>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default SimpleBarChart;\r\nimport React, { useState } from 'react';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\r\nimport { useUploadedData } from '../context/UploadedDataContext';\r\n\r\nconst SimpleBarChart = () => {\r\n  const { uploadedData } = useUploadedData();\r\n\r\n  // State to track the selected column index\r\n  const [selectedColumnIndex, setSelectedColumnIndex] = useState(209); // Default to 209 (\"LEADS\")\r\n\r\n  // Extract data from \"Lead Source\" sheet\r\n  const sheetName = 'Lead Source'; // Sheet name\r\n  const dataRange = { start: 4, end: 63 }; // Range from A4 to A63\r\n\r\n  // Convert the sheet data into the required format for the BarChart\r\n  const extractData = (data) => {\r\n    if (!data[sheetName]) return [];\r\n\r\n    const sheet = data[sheetName];\r\n    const extractedData = [];\r\n    for (let i = dataRange.start - 1; i < dataRange.end - 1 && i < sheet.length; i++) {\r\n      extractedData.push({\r\n        name: sheet[i][0], // Item names from column A\r\n        value: sheet[i][selectedColumnIndex] || 0, // Values from the selected column\r\n      });\r\n    }\r\n    return extractedData;\r\n  };\r\n\r\n  const data = extractData(uploadedData);\r\n\r\n  // Style for the buttons\r\n  const buttonStyle = {\r\n    default: {\r\n      backgroundColor: 'white',\r\n      color: '#333',\r\n      marginRight: '0px',\r\n      padding: '10px 20px ',\r\n      border: '1px solid #ccc',\r\n      borderRadius: '5px',\r\n      cursor: 'pointer',\r\n      boxShadow: 'none',\r\n    },\r\n    selected: {\r\n      backgroundColor: '#EBEBEB',\r\n      color: '#333',\r\n      marginRight: '5px',\r\n      marginLeft: '5px',\r\n      padding: '10px 20px',\r\n      border: '1px solid #ccc',\r\n      borderRadius: '8px',\r\n      cursor: 'pointer',\r\n      boxShadow: 'inset 2px 2px 5px rgba(0, 0, 0, 0.2)',\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"rounded-md bg-card text-card-foreground shadow-sm\">\r\n      <div className=\"flex flex-col space-y-1.5 px-4 py-4 mb-6 border-b border-border\">\r\n        <h3 className=\"text-xl font-medium leading-none\">Lead Source</h3>\r\n\r\n        {/* Buttons for selecting the column */}\r\n        <div className=\"flex space-x-2\" style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n          <button\r\n            onClick={() => setSelectedColumnIndex(209)}\r\n            style={selectedColumnIndex === 209 ? buttonStyle.selected : buttonStyle.default}\r\n          >\r\n            LEADS\r\n          </button>\r\n          <button\r\n            onClick={() => setSelectedColumnIndex(210)}\r\n            style={selectedColumnIndex === 210 ? buttonStyle.selected : buttonStyle.default}\r\n          >\r\n            APPTS\r\n          </button>\r\n          <button\r\n            onClick={() => setSelectedColumnIndex(211)}\r\n            style={selectedColumnIndex === 211 ? buttonStyle.selected : buttonStyle.default}\r\n          >\r\n            SALES\r\n          </button>\r\n          <button\r\n            onClick={() => setSelectedColumnIndex(212)}\r\n            style={selectedColumnIndex === 212 ? buttonStyle.selected : buttonStyle.default}\r\n          >\r\n            Amount $\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"p-6 pt-0\">\r\n        <ResponsiveContainer width=\"100%\" height={2500}>\r\n          <BarChart\r\n            data={data}\r\n            layout=\"vertical\"\r\n            margin={{ top: 20, right: 30, bottom: 20, left: 0 }} // Removed space on the left side\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis\r\n              type=\"number\"\r\n              domain={[0, 350]} // Set domain to limit the range\r\n              stroke=\"hsl(215.3 19.3% 34.5%)\"\r\n              tick={{ fontSize: 12 }} // Adjust font size for better readability\r\n            />\r\n            <YAxis\r\n              type=\"category\"\r\n              dataKey=\"name\"\r\n              stroke=\"hsl(215.3 19.3% 34.5%)\"\r\n              tick={{ fontSize: 12 }} // Adjust font size for better readability\r\n              width={350} // Reduced width for Y-axis\r\n              tickLine={false} // Hide tick lines for better appearance\r\n              axisLine={{ stroke: 'hsl(215.3 19.3% 34.5%)' }} // Customize axis line color\r\n            />\r\n            <Tooltip />\r\n            <Bar \r\n              dataKey=\"value\" \r\n              fill=\"#00C2DD\" // Updated bar color to #00C2DD\r\n              barSize={20} // Adjusted bar thickness to 10\r\n            />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimpleBarChart;\r\n","import React, { useState } from 'react';\r\nimport { useUploadedData } from '../context/UploadedDataContext';\r\n\r\nconst Menubar = () => {\r\n  const { uploadedData } = useUploadedData();\r\n  const [selectedSheet, setSelectedSheet] = useState('');\r\n\r\n  const handleSheetChange = (event) => {\r\n    setSelectedSheet(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <h4>Menu</h4>\r\n      <div>\r\n        {Object.keys(uploadedData).length > 0 && (\r\n          <div>\r\n\r\n            <select onChange={handleSheetChange} value={selectedSheet} style={{ marginTop: '10px' }}>\r\n              <option value=\"\" disabled>Select a sheet</option>\r\n              {Object.keys(uploadedData).map((sheetName, index) => (\r\n                <option key={index} value={sheetName}>{sheetName}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menubar;\r\n","    import React from 'react';\r\n    import { Container, Row, Col, Card } from 'react-bootstrap';\r\n    import SimpleBarChart from '../charts/SimpleBarChart';\r\n    import Menubar from './Menubar';\r\n\r\n    function Dashboard() {\r\n    return (\r\n        \r\n        \r\n        <Container>\r\n        {/* <h1>Dashboard</h1> */}\r\n        <Row style={{ border: '1px solid black', padding: '10px', }}>      <div style={{ display: 'flex', justifyContent: 'center', marginBottom: '20px' }}>\r\n        <Menubar />\r\n        </div>\r\n        </Row>\r\n\r\n\r\n        <Row>\r\n        <Col md={12}>\r\n            <Card style={{ border: 'none' }}>\r\n                {/* <Card.Header>Lead Source Bar Chart</Card.Header> */}\r\n                <Card.Body>\r\n                <SimpleBarChart /> {/* Display the SimpleBarChart component */}\r\n                </Card.Body>\r\n            </Card>\r\n        </Col>\r\n            {/* <Col md={4}>\r\n            <Card>\r\n                <Card.Header>Card Title 1</Card.Header>\r\n                <Card.Body>\r\n                <Card.Text>\r\n                    This is some content for the first card.\r\n                </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n            </Col> */}\r\n\r\n        {/* <Col md={4}>\r\n            <Card>\r\n                <Card.Header>Card Title 3</Card.Header>\r\n                <Card.Body>\r\n                <Card.Text>\r\n                    This is some content for the third card.\r\n                </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n            </Col> */}\r\n        </Row>\r\n        </Container>\r\n    );\r\n    }\r\n\r\n    export default Dashboard;\r\n","\n// export default App;\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport Login from './Login';\nimport { Container } from 'react-bootstrap';\nimport FileUpload from './Screen/FileUpload';\nimport NavigationBar from './Screen/Navbar';\nimport Dashboard from './Screen/Dashboard';\nimport { UploadedDataProvider } from './context/UploadedDataContext';\n\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [uploadedData, setUploadedData] = useState({});\n\n  useEffect(() => {\n    // Check localStorage for authentication status on component mount\n    const authStatus = localStorage.getItem('isAuthenticated');\n    setIsAuthenticated(authStatus === 'true');\n  }, []);\n\n  const handleLogin = () => {\n    setIsAuthenticated(true);\n    localStorage.setItem('isAuthenticated', 'true'); // Set auth status in localStorage\n  };\n\n  const handleLogout = () => {\n    setIsAuthenticated(false);\n    localStorage.removeItem('isAuthenticated'); // Remove auth status from localStorage\n  };\n\n  const handleFileUploadSuccess = (data) => {\n    setUploadedData(data);\n  };\n\n  return (\n    <UploadedDataProvider>\n      <Router>\n        {/* Conditionally render the NavigationBar only if the user is authenticated */}\n        {isAuthenticated && <NavigationBar />}\n        <Container>\n          <Routes>\n            {/* Redirect authenticated users away from login */}\n            <Route \n              path=\"/\" \n              element={isAuthenticated \n                ? <Navigate to=\"/file-upload\" /> \n                : <Login onLogin={handleLogin} />} \n            />\n            {/* Redirect to login if trying to access a protected route without authentication */}\n            <Route \n              path=\"/file-upload\" \n              element={isAuthenticated \n                ? <FileUpload onFileUploadSuccess={handleFileUploadSuccess} /> \n                : <Navigate to=\"/\" />} \n            />\n            <Route \n              path=\"/dashboard\" \n              element={isAuthenticated \n                ? <Dashboard /> \n                : <Navigate to=\"/\" />} \n            />\n            {/* Add other routes as needed */}\n          </Routes>\n        </Container>\n      </Router>\n    </UploadedDataProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}