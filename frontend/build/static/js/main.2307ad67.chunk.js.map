{"version":3,"sources":["config.js","Screen/Logoimage.png","Login.js","ForgotPassword.js","context/UploadedDataContext.js","Screen/FileUpload.js","Screen/Navbar.js","charts/LeadSource/SimpleBarChart.js","charts/Marketing/Marketing.js","Screen/Menubar.js","Screen/Dashboard.js","SignUp.js","ResetPassword.js","App.js","reportWebVitals.js","index.js"],"names":["API_BASE_URL","Login","_ref","onLogin","username","setUsername","useState","password","setPassword","error","setError","navigate","useNavigate","_jsx","Container","className","style","height","children","_jsxs","maxWidth","width","border","borderRadius","padding","boxShadow","src","Logo","alt","paddingBottom","Alert","variant","Form","onSubmit","async","e","preventDefault","fetch","method","headers","body","JSON","stringify","ok","err","console","Group","controlId","Label","Control","type","placeholder","value","onChange","target","Button","backgroundColor","borderColor","color","onClick","textAlign","marginTop","ForgotPassword","email","setEmail","successMessage","setSuccessMessage","test","response","result","json","message","UploadedDataContext","createContext","UploadedDataProvider","uploadedData","setUploadedData","Provider","useUploadedData","useContext","FileUpload","file","setFile","selectedSheet","setSelectedSheet","useEffect","axios","get","then","log","data","fileName","sheetName","rows","sheetData","reduce","acc","sheet_name","catch","files","onFileUpload","formData","FormData","append","post","Object","keys","length","map","index","borderCollapse","_","idx","row","rowIndex","cell","cellIndex","buttonStyle","cursor","display","alignItems","textDecoration","fontWeight","marginLeft","NavigationBar","Navbar","bg","expand","Brand","as","Link","to","logo","Toggle","Collapse","id","Nav","justifyContent","handleUpdateFileClick","window","location","reload","FaUser","marginRight","SimpleBarChart","selectedColumnIndex","setSelectedColumnIndex","dataRange","sheet","extractedData","i","push","name","extractData","fontSize","flex","transition","ResponsiveContainer","BarChart","layout","margin","top","right","bottom","left","CartesianGrid","strokeDasharray","XAxis","domain","stroke","tick","YAxis","dataKey","tickLine","axisLine","Tooltip","Bar","fill","barSize","MarketingBarChart","values","item","minValue","Math","min","max","calculateDomain","default","selected","hover","Menubar","onSheetChange","sheetNames","event","Dashboard","Row","Col","md","Card","Body","SignUp","success","setSuccess","errorData","required","ResetPassword","newPassword","setNewPassword","useLocation","resetToken","URLSearchParams","search","token","setTimeout","App","isAuthenticated","setIsAuthenticated","authStatus","localStorage","getItem","Router","Routes","Route","path","element","Navigate","handleLogin","setItem","onFileUploadSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.2307ad67.chunk.js","sourcesContent":["const environment = \"production\"; // Change to 'development' for local\r\nconst config = {\r\n  development: {\r\n    API_BASE_URL: \"http://localhost:5000\",\r\n  },\r\n  production: {\r\n    API_BASE_URL: \"https://dashboard.aztecsolar.com/api\",\r\n  },\r\n};\r\n\r\nexport const { API_BASE_URL } = config[environment];\r\n","export default __webpack_public_path__ + \"static/media/Logoimage.3636d39a.png\";","import React, { useState } from \"react\";\r\nimport { Container, Form, Button, Alert } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { API_BASE_URL } from \"./config\";\r\nimport Logo from \"../src/Screen/Logoimage.png\";\r\nimport { useNavigate } from \"react-router-dom\";  // Updated import\r\n\r\nconst Login = ({ onLogin }) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const navigate = useNavigate();  // Hook to navigate\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/login`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ username, password }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        onLogin();\r\n      } else {\r\n        setError(\"Invalid credentials\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error:\", err);\r\n      setError(\"An error occurred\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      className=\"d-flex justify-content-center align-items-center\"\r\n      style={{ height: \"100vh\" }}\r\n    >\r\n      <div\r\n        className=\"\"\r\n        style={{ maxWidth: \"500px\", width: \"100%\",border: \"1px solid #ccc\", borderRadius: \"5px\",padding: \"20px\",boxShadow: \"0 0 10px rgba(0, 0, 0, 0.2)\" }}\r\n      >\r\n        {/* Insert the image here */}\r\n        <div className=\"text-center mb-3\">\r\n          <img\r\n            src={Logo}\r\n            alt=\"Logo\"\r\n            style={{ maxWidth: \"50%\", height: \"auto\",paddingBottom: \"30px\" }}\r\n          />\r\n        </div>\r\n\r\n        <h3 className=\"mb-3 text-center\">Login</h3>\r\n        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter your email\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter your password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          {/* Login Button */}\r\n          <Button\r\n            variant=\"primary\"\r\n            type=\"submit\"\r\n            style={{ backgroundColor: \"#F36523\", borderColor: \"#F36523\" }}\r\n          >\r\n            Login\r\n          </Button>\r\n\r\n          {/* Forgot Password Link */}\r\n          <div className=\"mt-3 text-center\">\r\n          <Button\r\n  variant=\"link\"\r\n  style={{ color: \"#F36523\" }}\r\n  onClick={() => navigate(\"/signup\")}\r\n>\r\n  Don't have an account? Sign up here\r\n</Button>\r\n            <Button\r\n              variant=\"link\"\r\n              style={{ color: \"#F36523\" }}\r\n              onClick={() => navigate(\"/forgot-password\")} \r\n            >\r\n              Forgot Password?\r\n            </Button>.\r\n          </div>\r\n        </Form>\r\n        <div style={{ textAlign: \"center\", marginTop: \"20px\" }}>\r\n        <p>&copy;  Copyright 2024 Aztec Solar, Inc. | Privacy Policy and Terms & Conditions | Disclaimer | CA Contractor License #550110| All Rights Reserved.</p>\r\n      </div>\r\n      </div>\r\n\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport { Container, Form, Button, Alert } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { API_BASE_URL } from \"./config\"; // Ensure this is pointing to your API\r\nimport Logo from \"../src/Screen/Logoimage.png\";\r\nimport { useNavigate } from \"react-router-dom\";  // For navigation\r\n\r\nconst ForgotPassword = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const navigate = useNavigate();  // Hook to navigate\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    // Basic Email Validation\r\n    const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\r\n    if (!emailRegex.test(email)) {\r\n      setError(\"Please enter a valid email address.\");\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/auth/forgot-password`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n  \r\n      if (response.ok) {\r\n        setSuccessMessage(\"A password reset link has been sent to your email.\");\r\n        setError(\"\");  // Clear any previous errors\r\n      } else {\r\n        const result = await response.json();\r\n        setError(result.message || \"An error occurred\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error:\", err);\r\n      setError(\"An error occurred\");\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <Container\r\n      className=\"d-flex justify-content-center align-items-center\"\r\n      style={{ height: \"100vh\" }}\r\n    >\r\n      <div className=\"\" style={{ maxWidth: \"500px\", width: \"100%\",border: \"1px solid #ccc\", borderRadius: \"5px\",padding: \"20px\",boxShadow: \"0 0 10px rgba(0, 0, 0, 0.2)\" }} >\r\n      \r\n        {/* Insert the image here */}\r\n        <div className=\"text-center mb-3\">\r\n          <img src={Logo} alt=\"Logo\" style={{ maxWidth: \"50%\", height: \"auto\",paddingBottom: \"30px\" }} />\r\n        </div>\r\n\r\n        <h3 className=\"mb-3 text-center\">Forgot Password</h3>\r\n        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n        {successMessage && <Alert variant=\"success\">{successMessage}</Alert>}\r\n\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter your email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          {/* Submit Button */}\r\n          <Button\r\n            variant=\"primary\"\r\n            type=\"submit\"\r\n            style={{ backgroundColor: \"#F36523\", borderColor: \"#F36523\" }}\r\n          >\r\n            Reset Password\r\n          </Button>\r\n\r\n          {/* Navigate back to login page */}\r\n          <div className=\"mt-3 text-center\">\r\n            <Button variant=\"link\" style={{ color: \"#F36523\" }} onClick={() => navigate(\"/\")} >\r\n              Back to Login\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n        <div style={{ textAlign: \"center\", marginTop: \"40px\" }}>\r\n        <p>&copy;  Copyright 2024 Aztec Solar, Inc. | Privacy Policy and Terms & Conditions | Disclaimer | CA Contractor License #550110| All Rights Reserved.</p>\r\n      </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","import React, { createContext, useState, useContext } from 'react';\r\n\r\n// Create the context\r\nconst UploadedDataContext = createContext();\r\n\r\n// Create a provider component\r\nexport const UploadedDataProvider = ({ children }) => {\r\n    const [uploadedData, setUploadedData] = useState({});\r\n\r\n    return (\r\n        <UploadedDataContext.Provider value={{ uploadedData, setUploadedData }}>\r\n            {children}\r\n        </UploadedDataContext.Provider>\r\n    );\r\n};\r\n\r\n// Custom hook to use the context\r\nexport const useUploadedData = () => useContext(UploadedDataContext);\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { API_BASE_URL } from '../config';\r\nimport { useUploadedData } from '../context/UploadedDataContext';\r\n\r\nfunction FileUpload() {\r\n    const [file, setFile] = useState(null);\r\n    const [selectedSheet, setSelectedSheet] = useState('');\r\n    const { uploadedData, setUploadedData } = useUploadedData();\r\n\r\n    useEffect(() => {\r\n        // Fetch the most recent file name\r\n        axios.get(`${API_BASE_URL}/last-uploaded`)\r\n            .then(response => {\r\n                console.log('Most recent file data:', response.data); // Log the fetched data\r\n\r\n                const { fileName, sheetName, rows } = response.data;\r\n\r\n                if (fileName && sheetName) {\r\n                    // Fetch all records for the file\r\n                    axios.get(`${API_BASE_URL}/files/${fileName}`)\r\n                        .then(response => {\r\n                            console.log('Data for the most recent file:', response.data); // Log data for the most recent file\r\n\r\n                            const sheetData = response.data.reduce((acc, { sheet_name, rows }) => {\r\n                                acc[sheet_name] = rows;\r\n                                return acc;\r\n                            }, {});\r\n                            setUploadedData(sheetData);\r\n                            setSelectedSheet(sheetName);\r\n                        })\r\n                        .catch(error => {\r\n                            console.error('Error fetching data for the most recent file:', error);\r\n                        });\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching the most recent file:', error);\r\n            });\r\n    }, [setUploadedData]);\r\n\r\n    const onFileChange = (e) => {\r\n        setFile(e.target.files[0]);\r\n    };\r\n\r\n    const onFileUpload = () => {\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n\r\n        axios.post(`${API_BASE_URL}/upload`, formData)\r\n            .then(response => {\r\n                console.log('Upload response:', response.data); // Log the upload response\r\n                setUploadedData(response.data);\r\n                setSelectedSheet(Object.keys(response.data)[0]);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error uploading file:', error);\r\n            });\r\n    };\r\n\r\n    const handleSheetChange = (e) => {\r\n        setSelectedSheet(e.target.value);\r\n    };\r\n\r\n    const renderTable = (data) => {\r\n        if (!data.length) return null;\r\n\r\n        return (\r\n            <table style={{ borderCollapse: 'collapse', width: '100%' }}>\r\n                <thead>\r\n                    <tr>\r\n                        {data[0].map((_, idx) => (\r\n                            <th key={idx} style={{ border: '1px solid black', padding: '8px' }}>Column {idx + 1}</th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {data.map((row, rowIndex) => (\r\n                        <tr key={rowIndex}>\r\n                            {row.map((cell, cellIndex) => (\r\n                                <td key={cellIndex} style={{ border: '1px solid black', padding: '8px' }}>{cell}</td>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Upload test .xlsx File</h1>\r\n            <input type=\"file\" onChange={onFileChange} />\r\n            <button onClick={onFileUpload}>Upload</button>\r\n            {Object.keys(uploadedData).length > 0 && (\r\n                <div>\r\n                    <h2>Select a sheet:</h2>\r\n                    <select onChange={handleSheetChange} value={selectedSheet}>\r\n                        {Object.keys(uploadedData).map((sheetName, index) => (\r\n                            <option key={index} value={sheetName}>{sheetName}</option>\r\n                        ))}\r\n                    </select>\r\n                    <div>\r\n                        <h2>Data from {selectedSheet}:</h2>\r\n                        {renderTable(uploadedData[selectedSheet])}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FileUpload;\r\n// mysql -u doadmin -p -h aztech-db-mysql-do-user-14784423-0.k.db.ondigitalocean.com -P 25060 defaultdb < aztec.sql","// import React from 'react';\r\n// import { Navbar, Nav } from 'react-bootstrap';\r\n// import { Link, useNavigate } from 'react-router-dom';\r\n// import logo from './Logoimage.png';\r\n\r\n// function NavigationBar() {\r\n//   // You can use `useNavigate` to programmatically navigate if needed\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleUpdateFileClick = () => {\r\n//     // Force a page reload\r\n//     window.location.reload();\r\n//   };\r\n\r\n//   return (\r\n//     <Navbar bg=\"light\" expand=\"lg\">\r\n//       <Navbar.Brand as={Link} to=\"/\">\r\n//         <img\r\n//           src={logo}\r\n//           alt=\"Logo\"\r\n//           height=\"50\" // Adjust the height as needed\r\n//           className=\"d-inline-block align-top\"\r\n//         />\r\n//       </Navbar.Brand>\r\n\r\n//       <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n//       <Navbar.Collapse id=\"basic-navbar-nav\">\r\n//         <Nav className=\"mr-auto\">\r\n//           <Nav.Link as={Link} to=\"/dashboard\">Dashboard</Nav.Link>\r\n//         </Nav>\r\n//         <Nav className=\"mr-auto\">\r\n//         <Nav.Link as={Link} to=\"/\" onClick={handleUpdateFileClick} style={buttonStyle}>Update File</Nav.Link>\r\n//         </Nav>\r\n//       </Navbar.Collapse>\r\n//     </Navbar>\r\n//   );\r\n\r\n  \r\n// }\r\n// const buttonStyle = {\r\n//   backgroundColor: 'indigo',\r\n//   color: 'white',\r\n//   padding: '10px 20px',\r\n//   border: 'none',\r\n//   borderRadius: '5px',\r\n//   cursor: 'pointer',\r\n//   display: 'inline-flex',\r\n//   alignItems: 'center',\r\n//   textDecoration: 'none',\r\n//   fontWeight: 'bold',\r\n// };\r\n// export default NavigationBar;\r\n\r\n\r\nimport React from 'react';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { FaUser } from 'react-icons/fa'; // Import user icon from react-icons\r\nimport logo from './Logoimage.png';\r\n\r\nfunction NavigationBar() {\r\n  const navigate = useNavigate();\r\n\r\n  const handleUpdateFileClick = () => {\r\n    // Force a page reload\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <Navbar bg=\"light\" expand=\"lg\" >\r\n      <Navbar.Brand as={Link} to=\"/dashboard\">\r\n        <img\r\n          src={logo}\r\n          alt=\"Logo\"\r\n          height=\"50\" // Adjust the height as needed\r\n          className=\"d-inline-block align-top\"\r\n        />\r\n      </Navbar.Brand>\r\n\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav \" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link as={Link} to=\"/dashboard\">Dashboard</Nav.Link>\r\n        </Nav>\r\n        </Navbar.Collapse>\r\n\r\n        <Navbar.Collapse style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n        <Nav className=\"ml-auto\" > {/* Align to the right */}\r\n          <Nav.Link as={Link} to=\"/\" onClick={handleUpdateFileClick} style={buttonStyle}>\r\n            Update File\r\n          </Nav.Link>\r\n          <Nav.Link as={Link} to=\"/profile\" style={buttonStyle}>\r\n            <FaUser style={{ marginRight: '5px' }} /> Profile\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\n\r\nconst buttonStyle = {\r\n  backgroundColor: 'indigo',\r\n  color: 'white',\r\n  padding: '10px 20px',\r\n  border: 'none',\r\n  borderRadius: '5px',\r\n  cursor: 'pointer',\r\n  display: 'inline-flex',\r\n  alignItems: 'center',\r\n  textDecoration: 'none',\r\n  fontWeight: 'bold',\r\n  marginLeft: '10px', // Add spacing between buttons\r\n};\r\n\r\nexport default NavigationBar;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer\r\n} from 'recharts';\r\nimport { useUploadedData } from '../../context/UploadedDataContext';\r\n\r\nconst SimpleBarChart = () => {\r\n  const { uploadedData } = useUploadedData();\r\n\r\n  // State to track the selected column index\r\n  const [selectedColumnIndex, setSelectedColumnIndex] = useState(209); // Default to 209 (\"LEADS\")\r\n\r\n  // Extract data from \"Lead Source\" sheet\r\n  const sheetName = 'Lead Source'; // Sheet name\r\n  const dataRange = { start: 4, end: 63 }; // Range from A4 to A63\r\n\r\n  // Convert the sheet data into the required format for the BarChart\r\n  const extractData = (data) => {\r\n    if (!data[sheetName]) return [];\r\n\r\n    const sheet = data[sheetName];\r\n    const extractedData = [];\r\n    for (let i = dataRange.start - 1; i < dataRange.end - 1 && i < sheet.length; i++) {\r\n      extractedData.push({\r\n        name: sheet[i][0], // Item names from column A\r\n        value: sheet[i][selectedColumnIndex] || 0, // Values from the selected column\r\n      });\r\n    }\r\n    return extractedData;\r\n  };\r\n\r\n  const data = extractData(uploadedData);\r\n\r\n  // Style for the buttons\r\n  const buttonStyle = {\r\n    default: {\r\n      height: '50px',\r\n      fontSize: 13,\r\n      backgroundColor: '#F7FDFF',\r\n      color: '#333',\r\n      padding: '10px 20px',\r\n      border: '0.5px solid #CCCCCC',\r\n      cursor: 'pointer',\r\n      boxShadow: 'none',\r\n      flex: 1, // Make buttons occupy equal width\r\n      transition: 'background-color 0.3s',\r\n    },\r\n    selected: {\r\n      height: '50px',\r\n      fontSize: 12,\r\n      backgroundColor: '#E6E6E6',\r\n      color: '#333',\r\n      padding: '10px 20px',\r\n      border: '0.5px solid #CCCCCC',\r\n      cursor: 'pointer',\r\n      boxShadow: 'inset 2px 2px 5px rgba(0, 0, 0, 0.2)',\r\n      flex: 1, // Make buttons occupy equal width\r\n      transition: 'background-color 0.3s',\r\n    },\r\n    hover: {\r\n      backgroundColor: '#E6E6E6', // Hover effect background color\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"rounded-md bg-card text-card-foreground shadow-sm\">\r\n      <div className=\"flex flex-col space-y-1.5 px-4 py-4 mb-6 border-b border-border\">\r\n        <h3 className=\"text-xl font-medium leading-none\">Lead Source</h3>\r\n\r\n        {/* Buttons for selecting the column */}\r\n        <div\r\n          className=\"flex space-x-2\"\r\n          style={{\r\n            marginLeft: '60%',\r\n            display: 'flex',\r\n            justifyContent: 'space-between'\r\n          }}\r\n        >\r\n          <button\r\n            onClick={() => setSelectedColumnIndex(209)}\r\n            style={{\r\n              ...buttonStyle.default,\r\n              borderRadius: '5px 0 0 5px', // First button rounded corners\r\n              ...(selectedColumnIndex === 209 ? buttonStyle.selected : {}),\r\n            }}\r\n          >\r\n            LEADS\r\n          </button>\r\n          <button\r\n            onClick={() => setSelectedColumnIndex(210)}\r\n            style={{\r\n              ...buttonStyle.default,\r\n              ...(selectedColumnIndex === 210 ? buttonStyle.selected : {}),\r\n            }}\r\n          >\r\n            APPTS\r\n          </button>\r\n          <button\r\n            onClick={() => setSelectedColumnIndex(211)}\r\n            style={{\r\n              ...buttonStyle.default,\r\n              ...(selectedColumnIndex === 211 ? buttonStyle.selected : {}),\r\n            }}\r\n          >\r\n            SALES\r\n          </button>\r\n          <button\r\n            onClick={() => setSelectedColumnIndex(212)}\r\n            style={{\r\n              ...buttonStyle.default,\r\n              borderRadius: '0 5px 5px 0', // Last button rounded corners\r\n              ...(selectedColumnIndex === 212 ? buttonStyle.selected : {}),\r\n            }}\r\n          >\r\n            Amount $\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"p-6 pt-0\">\r\n        <ResponsiveContainer width=\"100%\" height={2500}>\r\n          <BarChart\r\n            data={data}\r\n            layout=\"vertical\"\r\n            margin={{\r\n              top: 20,\r\n              right: 30,\r\n              bottom: 20,\r\n              left: 0\r\n            }} // Removed space on the left side\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis\r\n              type=\"number\"\r\n              domain={[0, 350]} // Set domain to limit the range\r\n              stroke=\"hsl(215.3 19.3% 34.5%)\"\r\n              tick={{ fontSize: 12 }} // Adjust font size for better readability\r\n            />\r\n            <YAxis\r\n              type=\"category\"\r\n              dataKey=\"name\"\r\n              stroke=\"hsl(215.3 19.3% 34.5%)\"\r\n              tick={{ fontSize: 12 }} // Adjust font size for better readability\r\n              width={350} // Reduced width for Y-axis\r\n              tickLine={false} // Hide tick lines for better appearance\r\n              axisLine={{ stroke: 'hsl(215.3 19.3% 34.5%)' }} // Customize axis line color\r\n            />\r\n            <Tooltip />\r\n            <Bar\r\n              dataKey=\"value\"\r\n              fill=\"#00C2DD\" // Updated bar color to #00C2DD\r\n              barSize={20} // Adjusted bar thickness\r\n            />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimpleBarChart;\r\n","// export default MarketingBarChart;\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport { useUploadedData } from \"../../context/UploadedDataContext\";\r\n\r\nconst MarketingBarChart = () => {\r\n  const { uploadedData } = useUploadedData();\r\n\r\n  // State to track the selected column index\r\n  const [selectedColumnIndex, setSelectedColumnIndex] = useState(7); // Default to 209 (\"LEADS\")\r\n\r\n  // Extract data from \"Marketing\" sheet\r\n  const sheetName = \"Marketing\"; // Sheet name\r\n  const dataRange = {\r\n    start: 3,\r\n    end: 17,\r\n  }; // Range from G3 to G16\r\n\r\n  // Convert the sheet data into the required format for the BarChart\r\n  const extractData = (data) => {\r\n    if (!data[sheetName]) return [];\r\n\r\n    const sheet = data[sheetName];\r\n    const extractedData = [];\r\n\r\n    // Iterate over the range from row 3 to row 16 (inclusive)\r\n    for (\r\n      let rowIndex = dataRange.start - 1;\r\n      rowIndex < dataRange.end - 1 && rowIndex < sheet.length;\r\n      rowIndex++\r\n    ) {\r\n      extractedData.push({\r\n        name: sheet[rowIndex][6], // Access column G (index 6) for item names\r\n        value: sheet[rowIndex][selectedColumnIndex] || 0, // Value from selected column\r\n      });\r\n    }\r\n    return extractedData;\r\n  };\r\n\r\n  const data = extractData(uploadedData);\r\n\r\n  // Calculate min and max values dynamically for the selected column\r\n  const calculateDomain = (data) => {\r\n    const values = data.map((item) => item.value);\r\n    const minValue = Math.min(...values);\r\n    const maxValue = Math.max(...values);\r\n    return [minValue < 0 ? minValue : 0, maxValue]; // Ensure the min is at least 0 or negative if values are negative\r\n  };\r\n\r\n  // Get the dynamic domain\r\n  const domain = calculateDomain(data);\r\n\r\n  // Style for the buttons\r\n  const buttonStyle = {\r\n    default: {\r\n      height: \"50px\",\r\n      fontSize: 13,\r\n      backgroundColor: \"#F7FDFF\",\r\n      color: \"#333\",\r\n      padding: \"10px 20px\",\r\n      border: \"0.5px solid #CCCCCC\",\r\n      cursor: \"pointer\",\r\n      boxShadow: \"none\",\r\n      flex: 1, // Make buttons occupy equal width\r\n      transition: \"background-color 0.3s\",\r\n    },\r\n    selected: {\r\n      height: \"50px\",\r\n      fontSize: 12,\r\n      backgroundColor: \"#E6E6E6\",\r\n      color: \"#333\",\r\n      padding: \"10px 20px\",\r\n      border: \"0.5px solid #CCCCCC\",\r\n      cursor: \"pointer\",\r\n      boxShadow: \"inset 2px 2px 5px rgba(0, 0, 0, 0.2)\",\r\n      flex: 1, // Make buttons occupy equal width\r\n      transition: \"background-color 0.3s\",\r\n    },\r\n    hover: {\r\n      backgroundColor: \"#E6E6E6\", // Hover effect background color\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"rounded-md bg-card text-card-foreground shadow-sm\">\r\n      <div className=\"flex flex-col space-y-1.5 px-4 py-4 mb-6 border-b border-border\">\r\n        <h3 className=\"text-xl font-medium leading-none\"> Marketing </h3>\r\n        {/* Buttons for selecting the column */}{\" \"}\r\n        <div\r\n          className=\"flex space-x-2\"\r\n          style={{\r\n            marginLeft: \"10%\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <button\r\n            onClick={() => setSelectedColumnIndex(7)}\r\n            style={{\r\n              ...buttonStyle.default,\r\n              borderRadius: \"5px 0 0 5px\", // First button rounded corners\r\n              ...(selectedColumnIndex === 7 ? buttonStyle.selected : {}),\r\n            }}\r\n          >\r\n            Campaign Cost{\" \"}\r\n          </button>{\" \"}\r\n          <button\r\n            onClick={() => setSelectedColumnIndex(8)}\r\n            style={\r\n              selectedColumnIndex === 8\r\n                ? buttonStyle.selected\r\n                : buttonStyle.default\r\n            }\r\n          >\r\n            # of Leads{\" \"}\r\n          </button>{\" \"}\r\n          <button\r\n            onClick={() => setSelectedColumnIndex(9)}\r\n            style={\r\n              selectedColumnIndex === 9\r\n                ? buttonStyle.selected\r\n                : buttonStyle.default\r\n            }\r\n          >\r\n            Cost Per Lead{\" \"}\r\n          </button>{\" \"}\r\n          <button\r\n            onClick={() => setSelectedColumnIndex(10)}\r\n            style={\r\n              selectedColumnIndex === 10\r\n                ? buttonStyle.selected\r\n                : buttonStyle.default\r\n            }\r\n          >\r\n            # of Appts{\" \"}\r\n          </button>{\" \"}\r\n          <button\r\n            onClick={() => setSelectedColumnIndex(11)}\r\n            style={\r\n              selectedColumnIndex === 11\r\n                ? buttonStyle.selected\r\n                : buttonStyle.default\r\n            }\r\n          >\r\n            Cost per Appt{\" \"}\r\n          </button>{\" \"}\r\n          <button\r\n            onClick={() => setSelectedColumnIndex(12)}\r\n            style={\r\n              selectedColumnIndex === 12\r\n                ? buttonStyle.selected\r\n                : buttonStyle.default\r\n            }\r\n          >\r\n            # of Sales{\" \"}\r\n          </button>{\" \"}\r\n          <button\r\n            onClick={() => setSelectedColumnIndex(13)}\r\n            style={\r\n              selectedColumnIndex === 13\r\n                ? buttonStyle.selected\r\n                : buttonStyle.default\r\n            }\r\n          >\r\n            Cost per Sale{\" \"}\r\n          </button>{\" \"}\r\n          <button\r\n            onClick={() => setSelectedColumnIndex(14)}\r\n            style={\r\n              selectedColumnIndex === 14\r\n                ? buttonStyle.selected\r\n                : buttonStyle.default\r\n            }\r\n          >\r\n            # of Appts{\" \"}\r\n          </button>{\" \"}\r\n          <button\r\n            onClick={() => setSelectedColumnIndex(15)}\r\n            style={\r\n              selectedColumnIndex === 15\r\n                ? buttonStyle.selected\r\n                : buttonStyle.default\r\n            }\r\n          >\r\n            Revenue{\" \"}\r\n          </button>{\" \"}\r\n          <button\r\n            onClick={() => setSelectedColumnIndex(16)}\r\n            style={{\r\n              ...buttonStyle.default,\r\n              borderRadius: \"0 5px 5px 0\", // Last button rounded corners\r\n              ...(selectedColumnIndex === 16 ? buttonStyle.selected : {}),\r\n            }}\r\n          >\r\n            % Cost of Revenue{\" \"}\r\n          </button>{\" \"}\r\n        </div>{\" \"}\r\n      </div>{\" \"}\r\n      <div className=\"p-6 pt-0\">\r\n        <ResponsiveContainer width=\"100%\" height={1000}>\r\n          <BarChart\r\n            data={data}\r\n            layout=\"vertical\"\r\n            margin={{\r\n              top: 20,\r\n              right: 30,\r\n              bottom: 20,\r\n              left: 0,\r\n            }} // Removed space on the left side\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis\r\n              type=\"number\"\r\n              domain={domain} // Set dynamic domain based on data\r\n              stroke=\"hsl(215.3 19.3% 34.5%)\"\r\n              tick={{\r\n                fontSize: 12,\r\n              }} // Adjust font size for better readability\r\n            />{\" \"}\r\n            <YAxis\r\n              type=\"category\"\r\n              dataKey=\"name\"\r\n              stroke=\"hsl(215.3 19.3% 34.5%)\"\r\n              tick={{\r\n                fontSize: 12,\r\n              }} // Adjust font size for better readability\r\n              width={350} // Reduced width for Y-axis\r\n              tickLine={false} // Hide tick lines for better appearance\r\n              axisLine={{\r\n                stroke: \"hsl(215.3 19.3% 34.5%)\",\r\n              }} // Customize axis line color\r\n            />{\" \"}\r\n            <Tooltip />\r\n            <Bar\r\n              dataKey=\"value\"\r\n              fill=\"#63F700\" // Updated bar color to #00C2DD\r\n              barSize={20} // Adjusted bar thickness to 10\r\n            />{\" \"}\r\n          </BarChart>{\" \"}\r\n        </ResponsiveContainer>{\" \"}\r\n      </div>{\" \"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MarketingBarChart;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useUploadedData } from '../context/UploadedDataContext';\r\n\r\nconst Menubar = ({ onSheetChange }) => {\r\n  const { uploadedData } = useUploadedData();\r\n  const [selectedSheet, setSelectedSheet] = useState('');\r\n\r\n  // Automatically set the first sheet as the default only if no sheet is already selected\r\n  useEffect(() => {\r\n    const sheetNames = Object.keys(uploadedData);\r\n    if (sheetNames.length > 0 && !selectedSheet) {\r\n      setSelectedSheet(sheetNames[0]); // Set the first sheet as selected\r\n      onSheetChange(sheetNames[0]);    // Notify the parent component about the selection\r\n    }\r\n  }, [uploadedData, selectedSheet, onSheetChange]);\r\n\r\n  const handleSheetChange = (event) => {\r\n    const sheetName = event.target.value;\r\n    setSelectedSheet(sheetName);\r\n    onSheetChange(sheetName);  // Pass selected sheet to the parent component (Dashboard)\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <h4>Menu</h4>\r\n      <div>\r\n        {Object.keys(uploadedData).length > 0 && (\r\n          <div>\r\n            <select\r\n              onChange={handleSheetChange}\r\n              value={selectedSheet}\r\n              style={{ marginTop: '10px', width: '100%', height: '30px', textAlign: 'center' }}\r\n            >\r\n              {Object.keys(uploadedData).map((sheetName, index) => (\r\n                <option key={index} value={sheetName}>{sheetName}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menubar;\r\n","// export default Dashboard;\r\nimport React, { useState } from \"react\";\r\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\r\nimport SimpleBarChart from \"../charts/LeadSource/SimpleBarChart\";\r\nimport MarketingBarChart from \"../charts/Marketing/Marketing\";\r\nimport Menubar from \"./Menubar\";\r\nimport { useUploadedData } from \"../context/UploadedDataContext\";\r\n\r\nfunction Dashboard() {\r\n  const { uploadedData } = useUploadedData(); // Get available sheets\r\n  const [selectedSheet, setSelectedSheet] = useState(\"\");\r\n\r\n  // Handle sheet change from Menubar\r\n  const handleSheetChange = (sheetName) => {\r\n    setSelectedSheet(sheetName);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row\r\n        style={{\r\n          padding: \"10px\",\r\n        }}\r\n      >\r\n        <Menubar onSheetChange={handleSheetChange} />\r\n      </Row>\r\n      <Row>\r\n        <Col md={12}>\r\n          <Card\r\n            style={{\r\n              border: \"none\",\r\n            }}\r\n          >\r\n            <Card.Body>\r\n              {\" \"}\r\n              {/* Conditionally render SimpleBarChart if 'Sheet1' (or relevant sheet) is selected */}{\" \"}\r\n              {selectedSheet === \"Lead Source\" && <SimpleBarChart />}{\" \"}\r\n            </Card.Body>{\" \"}\r\n          </Card>{\" \"}\r\n        </Col>\r\n        <Col md={12}>\r\n          <Card\r\n            style={{\r\n              border: \"none\",\r\n            }}\r\n          >\r\n            <Card.Body>\r\n              {\" \"}\r\n              {/* Conditionally render MarketingBarChart if 'Marketing' sheet is selected */}{\" \"}\r\n              {selectedSheet === \"Marketing\" && <MarketingBarChart />}{\" \"}\r\n            </Card.Body>{\" \"}\r\n          </Card>{\" \"}\r\n        </Col>\r\n        {/* You can add more charts here for different sheets */}{\" \"}\r\n      </Row>{\" \"}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { useState } from \"react\";\r\nimport { Container, Form, Button, Alert } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { API_BASE_URL } from \"./config\";\r\nimport Logo from \"../src/Screen/Logoimage.png\";\r\nimport { useNavigate } from \"react-router-dom\";  // Updated import\r\n\r\nconst SignUp = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(false); // State to track successful signup\r\n\r\n  const navigate = useNavigate();  // Hook to navigate\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/signup`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ username, email, password }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setSuccess(true); // Set success to true if signup is successful\r\n        setError(\"\");  // Clear any previous error\r\n      } else {\r\n        const errorData = await response.json();\r\n        setError(errorData.message || \"Failed to sign up\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error:\", err);\r\n      setError(\"An error occurred\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      className=\"d-flex justify-content-center align-items-center\"\r\n      style={{ height: \"100vh\" }}\r\n    >\r\n      <div\r\n        className=\"\"\r\n        style={{ maxWidth: \"400px\", width: \"100%\" }}\r\n      >\r\n        {/* Insert the image here */}\r\n        <div className=\"text-center mb-3\">\r\n          <img\r\n            src={Logo}\r\n            alt=\"Logo\"\r\n            style={{ maxWidth: \"100%\", height: \"auto\" }}\r\n          />\r\n        </div>\r\n\r\n        <h3 className=\"mb-3 text-center\">Sign Up</h3>\r\n\r\n        {/* Show success message if registration is successful */}\r\n        {success && <Alert variant=\"success\">Sign-up successful! You can now log in.</Alert>}\r\n\r\n        {/* Show error message if sign-up failed */}\r\n        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n\r\n        <Form onSubmit={handleSubmit}>\r\n          {/* Username Input */}\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicUsername\">\r\n            <Form.Label>Username</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter your username\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              required\r\n            />\r\n          </Form.Group>\r\n\r\n          {/* Email Input */}\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter your email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n            />\r\n          </Form.Group>\r\n\r\n          {/* Password Input */}\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter your password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n          </Form.Group>\r\n\r\n          {/* Sign-Up Button */}\r\n          <Button\r\n            variant=\"primary\"\r\n            type=\"submit\"\r\n            style={{ backgroundColor: \"#F36523\", borderColor: \"#F36523\" }}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n\r\n          {/* Already have an account link */}\r\n          <div className=\"mt-3 text-center\">\r\n            <Button\r\n              variant=\"link\"\r\n              style={{ color: \"#F36523\" }}\r\n              onClick={() => navigate(\"/\")}\r\n            >\r\n              Already have an account? Login here\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n\r\n        <div style={{ textAlign: \"center\", marginTop: \"20px\" }}>\r\n          <p>&copy;  Copyright 2024 Aztec Solar, Inc. | Privacy Policy and Terms & Conditions | Disclaimer | CA Contractor License #550110| All Rights Reserved.</p>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React, { useState } from \"react\";\r\nimport { Container, Form, Button, Alert } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { API_BASE_URL } from \"./config\"; // Ensure this is pointing to your API\r\nimport { useNavigate, useLocation } from \"react-router-dom\";  // For navigation\r\nimport Logo from \"../src/Screen/Logoimage.png\";\r\n\r\nconst ResetPassword = () => {\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  \r\n  // Extract the reset token from the URL\r\n  const params = new URLSearchParams(location.search);\r\n  const resetToken = params.get(\"token\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!resetToken) {\r\n      setError(\"Reset token is missing.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/auth/reset-password`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ token: resetToken, newPassword }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setSuccessMessage(\"Password reset successfully. You can now log in.\");\r\n        setError(\"\");\r\n        // Redirect to login after a successful reset\r\n        setTimeout(() => navigate(\"/\"), 3000);\r\n      } else {\r\n        const result = await response.json();\r\n        setError(result.message || \"An error occurred\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error:\", err);\r\n      setError(\"An error occurred\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      className=\"d-flex justify-content-center align-items-center\"\r\n      style={{ height: \"100vh\" }}\r\n    >\r\n         <div className=\"\" style={{ maxWidth: \"500px\", width: \"100%\",border: \"1px solid #ccc\", borderRadius: \"5px\",padding: \"20px\",boxShadow: \"0 0 10px rgba(0, 0, 0, 0.2)\" }} >\r\n         <div className=\"text-center mb-3\">\r\n          <img src={Logo} alt=\"Logo\" style={{ maxWidth: \"50%\", height: \"auto\",paddingBottom: \"30px\" }}/>\r\n        </div>\r\n        <h3 className=\"mb-3 text-center\">Reset Password</h3>\r\n        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n        {successMessage && <Alert variant=\"success\">{successMessage}</Alert>}\r\n\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n            <Form.Label>New Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter new password\"\r\n              value={newPassword}\r\n              onChange={(e) => setNewPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Button\r\n            variant=\"primary\"\r\n            type=\"submit\"\r\n            style={{ backgroundColor: \"#F36523\", borderColor: \"#F36523\" }}\r\n          >\r\n            Reset Password\r\n          </Button>\r\n        </Form>\r\n\r\n        <div className=\"mt-3 text-center\">\r\n          <Button variant=\"link\" style={{ color: \"#F36523\" }} onClick={() => navigate(\"/\")} >\r\n            Back to Login\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n","\n// export default App;\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport Login from './Login';\nimport ForgotPassword from './ForgotPassword';\nimport { Container } from 'react-bootstrap';\nimport FileUpload from './Screen/FileUpload';\nimport NavigationBar from './Screen/Navbar';\nimport Dashboard from './Screen/Dashboard';\nimport { UploadedDataProvider } from './context/UploadedDataContext';\nimport SignUp from './SignUp';\nimport ResetPassword from './ResetPassword';\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [uploadedData, setUploadedData] = useState({});\n\n  useEffect(() => {\n    // Check localStorage for authentication status on component mount\n    const authStatus = localStorage.getItem('isAuthenticated');\n    setIsAuthenticated(authStatus === 'true');\n  }, []);\n\n  const handleLogin = () => {\n    setIsAuthenticated(true);\n    localStorage.setItem('isAuthenticated', 'true'); // Set auth status in localStorage\n  };\n\n  const handleLogout = () => {\n    setIsAuthenticated(false);\n    localStorage.removeItem('isAuthenticated'); // Remove auth status from localStorage\n  };\n\n  const handleFileUploadSuccess = (data) => {\n    setUploadedData(data);\n  };\n\n  return (\n    <UploadedDataProvider>\n      <Router>\n        {/* Conditionally render the NavigationBar only if the user is authenticated */}\n        {isAuthenticated && <NavigationBar />}\n        <Container>\n          <Routes>\n            {/* Redirect authenticated users away from login */}\n            <Route \n              path=\"/\" \n              element={isAuthenticated \n                ? <Navigate to=\"/file-upload\" /> \n                : <Login onLogin={handleLogin} />} \n            />\n            {/* Redirect to login if trying to access a protected route without authentication */}\n            <Route \n              path=\"/file-upload\" \n              element={isAuthenticated \n                ? <FileUpload onFileUploadSuccess={handleFileUploadSuccess} /> \n                : <Navigate to=\"/\" />} \n            />\n            <Route \n              path=\"/dashboard\" \n              element={isAuthenticated \n                ? <Dashboard /> \n                : <Navigate to=\"/\" />} \n            />\n            <Route path=\"/forgot-password\" element={<ForgotPassword />} />\n            <Route path=\"/reset-password\" element={<ResetPassword />} />\n            \n            <Route path=\"/signup\" element={<SignUp />} />\n            {/* Add other routes as needed */}\n          </Routes>\n        </Container>\n      </Router>\n    </UploadedDataProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}